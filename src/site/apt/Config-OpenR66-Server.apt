OpenR66 Server Configuration File

*config

  *comment:string Optional
  
**identity

  *hostid:nonEmptyString
            
   Host ID in NON SSL mode

  *sslhostid:nonEmptyString Optional

   Host ID in SSL mode
   
  *cryptokey:Des-File

   Des CryptoKey File containing the key in Des mode for R66 passwords
   
  *authentfile:XML-File Optional

   Authentication File containing Authentications for partners

**server

  *serveradmin:nonEmptyString
  
   Username for Administrator access
                        
  *serverpasswd:nonEmptyString
                    
   Password for Administrator access using Crypto Key
                        
  *usenossl:booleanType default="True"
                    
   True (Default) if R66 will allow no SSL mode connection
                        
  *usessl:booleanType default="False"
                    
   True if R66 will allow SSL mode connection
                        
  *usehttpcomp:booleanType default="False"
  
   True if Administrator (HTTPS) will allow HTTP compression
        
  *uselocalexec:booleanType default="False"
  
   By default, use the System.exec() but can lead to limitation in performances (JDK limitation). The usage of the GoldenGate LocalExec Daemin tends to reach better performances through execution delegation
        
  *lexecaddr:address default="127.0.0.1" Optional
  
   Address of LocalExec Daemon
   
  *lexecport:nonNulInteger default="9999" Optional
  
   Port of LocalExec Daemon
  
  *httpadmin:directoryType
  
   Home Directory for HTTPS file support for Administrator
   
  *admkeypath:JKS-File
            
   JKS HTTP KeyStore for Administrator Access in HTTPS Mode (containing Server Certificate)
  
  *admkeystorepass:nonEmptyString
  
   Password for the HTTP KeyStore
   
  *admkeypass:nonEmptyString
  
   Password for the HTTP Server Certificate within the HTTP KeyStore

  *checkaddress:booleanType default="False" Optional
  
   True if R66 will check remote IP address while accepting a new connection
   
  *checkclientaddress:booleanType default="False" Optional
  
   True if R66 will check remote IP address also for remote Client
   
  *pastlimit:nonNulInteger default="86400000" Optional

   Monitoring: how long in ms to get back in monitoring

  *minimaldelay:nonNulInteger default="5000" Optional

   Monitoring: minimal interval in ms before redo real monitoring

  *snmpconfig:XML-File Optional

   Configuration XML File for SNMPÂ¨service  
   
**network
	
  *serverport:nonNulInteger default="6666"
  
   Port used in NON SSL mode
                        
  *serversslport:nonNulInteger Optional default="6667"
  
   Port used in SSL mode
                        
  *serverhttpport:nonNulInteger default="8066"
  
   Port used for monitoring in HTTP mode
                        
  *serverhttpsport:nonNulInteger default="8067"
  
   Port used for Administrator access in HTTPS mode

**ssl Optional

  *keypath:JKS-File
            
   JKS KeyStore for R66 Access in SSL Mode (containing Server Certificate)
   
  *keystorepass:nonEmptyString
  
   Password for the KeyStore
   
  *keypass:nonEmptyString
  
   Password for the Server Certificate within the KeyStore
  
  *trustkeypath:JKS-File
  
   JKS Trust KeyStore for R66 Access in SSL Mode with Client Authentication (containing Client Certificate)
                        
  *trustkeystorepass:nonEmptyString
  
   Password for the Trust KeyStore
                        
  *trustuseclientauthenticate:booleanType default="False"
  
   True if R66 will only allow client through SSL authentication
  
**directory

  *serverhome:directoryType
  
   Home Directory for the OpenR66 Server (relative path to this Home)
   
  *in:nonEmptyString Optional default="IN"
  
   Default Receive Directory
      	
  *out:nonEmptyString Optional default="OUT"
  
   Default Send Directory
   
  *arch:nonEmptyString Optional default="ARCH"
  
   Default Archive Directory
   
  *work:nonEmptyString Optional default="WORK"
  
   Default Working Directory
   
  *conf:nonEmptyString Optional default="CONF"
  
   Configuration Directory
                        
**limit

  *serverthread:nonNulInteger default="8" Optional
  
   Number of Threads on Server side (=Number of Cores)
   
  *clientthread:nonNulInteger default="80" Optional
  
   Number of Threads on Client side (=10xServer)
   
  *memorylimit:nonNulInteger default="4000000000" Optional
  
   Memory Limit for R66 Server Java Process
   
  *sessionlimit:nonNegInteger default="8388608" Optional
  
   HBandwidth for one session (64Mb)
   
  *globallimit:nonNegInteger default="67108864" Optional
  
   Global Bandwidth (512Mb)
   
  *delaylimit:nonNulInteger default="10000" Optional
  
   Delay between 2 checks of Bandwidth (10s). The less this value, the better the bandwidth limitation is done. However take care to not give too low value
   
  *runlimit:nonNulInteger default="10000" Optional
  
   Limite by batch of active transfers (10000)
   
  *delaycommand:nonNulInteger default="5000" Optional
  
   Delay between 2 execution of the Commander (5s)
   
  *delayretry:nonNulInteger default="30000" Optional
  
   Delay between 2 attemps in case of error (30s)
   
  *timeoutcon:nonNulInteger default="30000" Optional
  
   Delay before a Time Out occurs (30s)
   
  *blocksize:nonNulInteger default="65536" Optional
  
   Block size (64Ko). A value between 8 KB to 16 MB is recommanded
   
  *gaprestart:nonNulInteger default="30" Optional
  
   Gap to use when restarting a transfer as gap x blocksize
   
  *usenio:booleanType default="False" Optional
  
   Usage of NIO support for the files. According to the JDK, it can enhance the performances
   
  *usecpulimit:booleanType default="False" Optional
  
   Usage of CPU Limitation when new request starts
   
  *usejdkcpulimit:booleanType default="False" Optional
  
   Usage of CPU limitation based on Native JDK support, else (False) on Java Sysmon library
   
  *cpulimit:decimalType default="0.0" Optional
  
   Usage of CPU limitation based on Native JDK support, else (False) on Java Sysmon library
   
  *connlimit:nonNegInteger default="0" Optional
  
   Usage of CPU limitation based on Native JDK support, else (False) on Java Sysmon library
   
  *usefastmd5:booleanType default="True"
  
   Usage of FastMD5 library. The library greatly improves the performances for the MD5 computations
   
  *fastmd5:SODLL-File Optional
  
   Library JNI Filepath. If the path is empty, the pure Java version will be used
   
**db
	
  *dbdriver:address
  
   4 types of database are currently supported: oracle, mysql, postgresql, h2
   
  *dbserver:normString
  
   Connection to the database in JDBC mode (jdbc:type://[host:port]....). Use the database documentation to find the correct syntax for the JDBC connection
   
  *dbuser:address
  
   Database User
   
  *dbpasswd:nonEmptyString
  
   Database User's Password
