<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>GoldenGate</groupId>
  <artifactId>GoldenGateR66</artifactId>
  <name>GoldenGate OpenR66</name>
  <version>2.2.5</version>
  <description>
  OpenR66 is a File Transfer Monitor to be used in real production to transfer files between servers.
  It allows to start/restart a transfer, check the remote MD5, check status, make pre or post
  actions on transfer, ... It includes Bandwidth limitation and will support SSL channel.
  When multiple transfers occurs between two hosts, they use the same network channel and
  multiplex their other transfers on this channel.
  </description>
  <url>http://openr66.free.fr/GoldenGateR66</url>
  <inceptionYear>2009</inceptionYear>
  <parent>
    <groupId>GoldenGate</groupId>
    <artifactId>persistence-deps</artifactId>
    <version>1.0</version>
  </parent>
  <scm>
  	<connection>scm:svn:http://goldengate.svn.sourceforge.net/svnroot/goldengate/GoldenGateR66/trunk</connection>
  	<developerConnection>scm:svn:https://goldengate.svn.sourceforge.net/svnroot/goldengate/GoldenGateR66/trunk</developerConnection>
  	<url>http://goldengate.svn.sourceforge.net/svnroot/goldengate/GoldenGateR66/trunk</url>
  </scm>
  <licenses>
  	<license>
  		<name>GPL 3.0</name>
  		<url>LICENSE.txt</url>
  	</license>
  </licenses>
  <repositories>
  	<repository>
  		<id>goldengate.releases</id>
  		<name>GoldenGate releases</name>
  		<url>http://openr66.free.fr/maven2</url>
  		<releases>
  			<enabled>true</enabled>
  		</releases>
  		<snapshots>
  			<enabled>false</enabled>
  		</snapshots>
  	</repository>
  </repositories>
  <dependencies>
  <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-access</artifactId>
      <version>1.0.1</version>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>1.0.1</version>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-core</artifactId>
      <version>1.0.1</version>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>dom4j</groupId>
      <artifactId>dom4j</artifactId>
      <version>1.6.1</version>
      <exclusions>
      	<exclusion>
      		<artifactId>xml-apis</artifactId>
      		<groupId>xml-apis</groupId>
      	</exclusion>
      </exclusions>
    </dependency>
    <dependency>
    	<groupId>NettyExtension</groupId>
    	<artifactId>NettyExtension</artifactId>
    	<version>1.1.12</version>
    	<scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>GoldenGate</groupId>
      <artifactId>GoldenGateDigest</artifactId>
      <version>1.0.5</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>GoldenGate</groupId>
      <artifactId>GoldenGateCommon</artifactId>
      <version>1.1.10</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
    	<groupId>javasysmon</groupId>
    	<artifactId>javasysmon</artifactId>
    	<version>0.3.3</version>
      <optional>true</optional>
    </dependency>
    <dependency>
    	<groupId>Oracle</groupId>
    	<artifactId>ojdbc6</artifactId>
    	<version>6</version>
	    <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <version>1.3.166</version>
      <optional>true</optional>
    </dependency>
    <dependency>
    	<groupId>postgresql</groupId>
    	<artifactId>postgresql</artifactId>
    	<version>9.1-901-1.jdbc4</version>
    	<optional>true</optional>
    </dependency>
    <dependency>
    	<groupId>mysql</groupId>
    	<artifactId>mysql-connector-java</artifactId>
    	<version>5.1.19</version>
    	<optional>true</optional>
    </dependency>
    <dependency>
    	<groupId>commons-io</groupId>
    	<artifactId>commons-io</artifactId>
    	<version>2.2</version>
      <optional>true</optional>
    </dependency>
	<dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-exec</artifactId>
      <version>1.1</version>
    </dependency>
    <dependency>
    	<groupId>commons-codec</groupId>
    	<artifactId>commons-codec</artifactId>
    	<version>1.6</version>
    </dependency>
    <dependency>
    	<groupId>jaxen</groupId>
    	<artifactId>jaxen</artifactId>
    	<version>1.1.1</version>
    	<exclusions>
    		<exclusion>
    			<artifactId>xom</artifactId>
    			<groupId>xom</groupId>
    		</exclusion>
    		<exclusion>
    			<artifactId>jdom</artifactId>
    			<groupId>jdom</groupId>
    		</exclusion>
    		<exclusion>
    			<artifactId>xml-apis</artifactId>
    			<groupId>xml-apis</groupId>
    		</exclusion>
    		<exclusion>
    			<artifactId>xercesImpl</artifactId>
    			<groupId>xerces</groupId>
    		</exclusion>
    	</exclusions>
    </dependency>
    <dependency>
    	<groupId>GoldenGate</groupId>
    	<artifactId>GoldenGateExec</artifactId>
    	<version>1.0.5</version>
    </dependency>
    <dependency>
    	<groupId>GoldenGate</groupId>
    	<artifactId>GoldenGateSnmp</artifactId>
    	<version>1.0.4</version>
    	<type>jar</type>
    	<scope>compile</scope>
    </dependency>
  </dependencies>
  <properties>
  	<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  	<attach-distribution>false</attach-distribution>
    <filtermodule>**</filtermodule>
  </properties>
  <build>
    <plugins>
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>1.7</version>
        <executions>
          <execution>
            <id>write-version</id>
            <phase>validate</phase>
            <goals>
              <goal>run</goal>
	    	</goals>
            <configuration>
              <tasks>
                <mkdir dir="${project.build.directory}"/>
                <mkdir dir="${project.build.directory}/classes"/>
                <echo message="${project.version}" file="${project.build.directory}/version.txt" />
                <echo message="// DO NOT MODIFY - WILL BE OVERWRITTEN DURING THE BUILD PROCESS${line.separator}package openr66.protocol.utils;${line.separator}/** Provides the version information of GoldenGate OpenR66. */${line.separator}public final class Version {${line.separator} /** The version identifier. */${line.separator} public static final String ID = &quot;${project.version}&quot;;${line.separator} /** Prints out the version identifier to stdout. */${line.separator} public static void main(String[] args) { System.out.println(ID); }${line.separator} private Version() { super(); }${line.separator}}${line.separator}" file="${basedir}/src/main/java/openr66/protocol/utils/Version.java" />
                <echo message="${project.artifactId}" />
                <taskdef resource="net/sf/antcontrib/antlib.xml" />
                <if>
                <equals arg1="${project.artifactId}" arg2="GoldenGateR66"/>
                <then>
                	<mkdir dir="${project.build.directory}/site"/>
                </then>
                </if>
              </tasks>
            </configuration>
          </execution>
          <execution>
            <id>add-license</id>
            <phase>package</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <tasks>
                <taskdef resource="net/sf/antcontrib/antlib.xml" />
                <if>
                  <or>
                    <equals arg2="jar" arg1="${project.packaging}" />
                    <equals arg2="bundle" arg1="${project.packaging}" />
                  </or>
                  <then>
                    <move file="${project.build.directory}/${project.build.finalName}.jar" tofile="${project.build.directory}/${project.build.finalName}.orig.jar" />
                    <zip destfile="${project.build.directory}/${project.build.finalName}.jar">
                      <zipfileset dir="${basedir}" prefix="META-INF/">
                        <include name="LICENSE.*" />
                        <include name="NOTICE.*" />
                        <include name="COPYRIGHT.*" />
                      </zipfileset>
                      <zipfileset dir="${basedir}/license" prefix="META-INF/license/">
                        <exclude name="**/.*/**" />
                        <include name="**" />
                      </zipfileset>
                      <zipfileset filemode="644" src="${project.build.directory}/${project.build.finalName}.orig.jar" dirmode="755">
                      </zipfileset>
                    </zip>
                    <delete file="${project.build.directory}/${project.build.finalName}.orig.jar" />
                    <move file="${project.build.directory}/${project.build.finalName}-sources.jar" tofile="${project.build.directory}/${project.build.finalName}-sources.orig.jar" />
                    <zip destfile="${project.build.directory}/${project.build.finalName}-sources.jar">
                      <zipfileset dir="${basedir}" prefix="META-INF/">
                        <include name="LICENSE.*" />
                        <include name="NOTICE.*" />
                        <include name="COPYRIGHT.*" />
                        <include name="**/Makefile" />
                      </zipfileset>
                      <zipfileset dir="${basedir}/license" prefix="META-INF/license/">
                        <exclude name="**/.*/**" />
                        <include name="**" />
                      </zipfileset>
                      <zipfileset filemode="644" src="${project.build.directory}/${project.build.finalName}-sources.orig.jar" dirmode="755">
                      	<exclude name="**/${filterexclude}/**" />
                        <include name="**/${filtermodule}/**" />
                      </zipfileset>
                    </zip>
                    <delete file="${project.build.directory}/${project.build.finalName}-sources.orig.jar" />
                  </then>
                </if>
              </tasks>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <reporting>
  	<plugins>
	  <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>2.8.1</version>
        <reportSets>
         <reportSet>
          <id>aggregate</id>
          <configuration>
	          <aggregate>true</aggregate>
	          <doclet>org.jboss.apiviz.APIviz</doclet>
	          <docletArtifact>
	            <groupId>org.jboss.apiviz</groupId>
	            <artifactId>apiviz</artifactId>
	            <version>1.3.1.GA</version>
	          </docletArtifact>
	          <attach>false</attach>
	          <useStandardDocletOptions>true</useStandardDocletOptions>
	          <outputDirectory>${project.build.directory}/api</outputDirectory>
	          <reportOutputDirectory>${project.build.directory}/api</reportOutputDirectory>
	          <destDir>api</destDir>
	          <charset>UTF-8</charset>
	          <docencoding>UTF-8</docencoding>
	          <breakiterator>true</breakiterator>
	          <version>true</version>
	          <author>true</author>
	          <keywords>true</keywords>
	          <overview>${basedir}/src/javadoc/overview.html</overview>
	          <doctitle>${project.name} ${project.version} API Reference</doctitle>
	          <windowtitle>${project.name} ${project.version} API Reference</windowtitle>
	          <additionalparam>
	            -link http://java.sun.com/javase/6/docs/api/
	            -link http://jboss.org/file-access/default/members/netty/freezone/api/3.1/

				-group "OpenR66 Server package" "openr66.server*"
				-group "OpenR66 Client package" "openr66.client*"
				-group "OpenR66 Protocol package" "openr66.protocol*"
				-group "OpenR66 Database package" "openr66.database*"
				-group "OpenR66 Configuration file based loaders package" "openr66.configuration*"
				-group "OpenR66 Context package" "openr66.context*"
				-group "OpenR66 Commander package" "openr66.commander*"

	            -sourceclasspath ${basedir}/target/classes
	          </additionalparam>
	          <encoding>UTF-8</encoding>
	          <locale>en_US</locale>
	          <excludePackageNames>${project.groupId}.example*:${project.groupId}.util.internal*</excludePackageNames>
          </configuration>
          <reports>
           <report>aggregate</report>
          </reports>
         </reportSet>
        </reportSets>
      </plugin>
	</plugins>
  </reporting>
</project>